// DO NOT use skipws at any point in the tree above Instruction
// https://github.com/textX/textX/issues/205
// (includes if/while/for...)
Program: /[ \n]*/ Block;
Block: paragraphs*=Paragraph;
Paragraph: /[ \n]*/ lines+=Line /[ \n]*/;
Line: assignment=Assignment? ( sentence=Sentence | statement=If | statement=While | statement=For ) /[ ]*/ ( /(?m)\n/ | &LineEndKeyword '' );
LineEndKeyword: 'end' | 'else' | 'elif';
Sentence: instructions+=Instruction;
Instruction: /[ ]*/ (pushable=Pushable exec='.' | pushable=Pushable | exec='.');
Assignment[skipws]: var=MyID '=';

Pushable: function=Function | type=Type | struct=Struct | var=MyID | rawval=RawVal | expr=WrappedExpression;
If: 'if' condition=Sentence /[ ]*/ 'do' block=Block ('elif' elif_conditions=Sentence /[ ]*/ 'do' elif_blocks=Block)* ('else' else_block=Block)? 'end';
While: 'while' condition=Sentence /[ ]*/ 'do' block=Block 'end';
For: 'for' (/[ ]*/ var=MyID /[ ]*/ 'in' )? sentence=Sentence /[ ]*/ 'do' block=Block 'end';

Function: 'func' /[ ]*/ args=Type block=Block /[ ]*/ 'end';
WrappedExpression: '((' e=Expression0 /[ ]*/ '))';
Type: '(' /[ \n]*/ (varsWithType=VarWithType /[ \n]*/)* ')';
VarWithType[skipws]: name=MyID type=MyID;

Keyword: 'end' | 'func' | 'if' | 'while' | 'for' | 'do' | 'else' | 'elif' | 'List[' | 'Dict[';
MyID: !Keyword ID;

RawVal: FLOAT | STRING | List | Dict;
List: 'List[' (/[ \n]*/ sentences=Sentence /(?m),?\n*/)* ']';
Dict: 'Dict[' (/[ \n]*/ keys=Sentence '=' values=Sentence /(?m),?\n*/)* ']';
Struct: type=MyID? '[' (/[ \n]*/ assigns=Assignment sentences=Sentence /(?m),?\n*/)* /[ \n]*/ ']';

Expression0[skipws]: expr=Expression1 (ops=Operators0 exprs=Expression1)*;
Operators0[skipws]: '==' | '<=' | '>=' | '<' | '>' | '!=';
Expression1[skipws]: expr=Expression2 (ops=Operators1 exprs=Expression2)*;
Operators1[skipws]: '+' | '-';
Expression2[skipws]: expr=Value (ops=Operators2 exprs=Value)*;
Operators2[skipws]: '*' | '/';
Value[skipws]: id=ID | num=FLOAT | ('(' expr=Expression0 ')');

// It's important for Comment to swallow the '\n' because we don't want single lines
// comments to break our concept of paragraphs.
// https://github.com/textX/textX/issues/207
Comment: /[ ]*#.*\n/;
