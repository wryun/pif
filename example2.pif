Stack = (
  contents list
  pop Function
  push Function
)

newStack = func ()
  [Stack|
    contents = []

    pop = func (l list)
      -1 l:remove.
    end

    push = func (l list i int)
      l:append.
    end
  ]
end

ops = [
  '^': func (Stack) ((:pop. ** :pop.)) end
  '*': func (Stack) ((:pop. * :pop.)) end
  '/': func (Stack) ((:pop. / :pop.)) end
  '+': {(Stack) ((:pop. + :pop.)) end
  '-': {(Stack) ((:pop. - :pop.)) end
]

rpn_calc = {(list)
  stack = newStack.
  for token
    if token ops :contains.
      stack ops[token].
    else
      token:to_number. stack:push.

  stack
}

main = {(list)
  rpn_calc.
  :pop. print.
}
